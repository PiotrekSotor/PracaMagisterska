source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/loadlibs.R')
remove.packages("cec2013", lib="~/R/win-library/3.3")
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/loadlibs.R')
if (!require("cec2013")){
install.packages("cec2013")
library("cec2013")
}
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/loadlibs.R')
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/loadlibs.R')
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/methods.R')
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
proc.time
proc.time()
proc.time()->x
x["elapsed"]
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
possibleTimes <- seq(0,2, by=0.01)
collectedValues<-c("bestSolution", "meanSolution")
resultsInTime<- array(dimnames = list(time=possibleTimes, values=collectedValues),
dim = c(length(possibleTimes), length(collectedValues))
)
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
iterationsSoFar<-0
iterations<-10
allIterationNumber<-100*iterations
possibleTimes <- seq(0,2, by=0.01)
numberOfRun <- seq(1,iterations, by=1)
collectedValues<-c("bestSolution", "meanSolution")
resultsInTime<- array(dimnames = list(numberOfRun = numberOfRun, time=possibleTimes, values=collectedValues),
dim = c(length(numberOfRun),length(possibleTimes), length(collectedValues))
)
resultsInTime["9","0.09","bestSolution"]
endTime<-proc.time()
elapsed<-endTime-startTime
elapsed
elapsed["elapsed"]
as.string(elapsed["elapsed"])
dim(elapsed["elapsed"])
elapsed["elapsed","elapsed"]
elapsed["elapsed"]
elapsed["elapsed"]->
elapsed["elapsed"]->x
toString(elapsed["elapsed"])
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
possibleTimes
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
debugSource('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
resultsInTime[numberOfRun,toString(elapsed["elapsed"]),"bestSolution"]
numberOfRun
toString(elapsed["elapsed"])
sprintf("%.2f",elapsed["elapsed"])
x<-sprintf("%.2f",elapsed["elapsed"])
debugSource('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
debugSource('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
possibleTimes
dim(possibleTimes)
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
ls()
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
resultsInTime[,,"bestSolution"]
min(resultsInTime)
min(resultsInTime[,,])
min(resultsInTime[,,"bestSolution"])
min(resultsInTime[,"0","bestSolution"])
min(resultsInTime["1","0","bestSolution"])
resultsInTime["1",,"bestSolution"]
debugSource('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
elapsed
max(fitness)
resultsInTime[1,"0.02","bestSolution"]
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
min(resultsInTime[,,"bestSolution"])
resultsInTime["1",,"bestSolution"]
plot(resultsInTime["1",,"bestSolution"])
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
plot(resultsInTime["1",,"bestSolution"])
resultsInTime["1",,"bestSolution"]
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
resultsInTime["1",,"bestSolution"]
plot(resultsInTime["1",,"bestSolution"])
plot(resultsInTime["1",,"bestSolution"], y = possibleTimes)
plot(resultsInTime["1",,"bestSolution"], x = possibleTimes)
lines(resultsInTime["1",,"bestSolution"], x = possibleTimes)
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/methods.R')
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
?goTest
getProblemDimen("AluffiPentini")
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/methods.R')
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
AluffiPentini(1,1)
getProblemDimen("Paviani")
getProblemDimen("Salomon")
for (name in c("Ackleys", "AluffiPentini", "BeckerLago",
"Bohachevsky1", "Bohachevsky2", "Branin",
"Camel3", "Camel6", "CosMix2", "CosMix4",
"DekkersAarts", "Easom", "EMichalewicz",
"Expo", "GoldPrice", "Griewank", "Gulf",
"Hartman3", "Hartman6", "Hosaki", "Kowalik",
"LM1", "LM2n10", "LM2n5", "McCormic",
"MeyerRoth", "MieleCantrell", "Modlangerman",
"ModRosenbrock", "MultiGauss", "Neumaier2",
"Neumaier3", "Paviani", "Periodic",
"PowellQ", "PriceTransistor", "Rastrigin",
"Rosenbrock", "Salomon", "Schaffer1",
"Schaffer2", "Schubert", "Schwefel",
"Shekel10", "Shekel5", "Shekel7",
"Shekelfox5", "Wood", "Zeldasine10",
"Zeldasine20")){
if (getProblemDimen(name) == 2)
cat(name)
}
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
for (name in c("Ackleys", "AluffiPentini", "BeckerLago",
"Bohachevsky1", "Bohachevsky2", "Branin",
"Camel3", "Camel6", "CosMix2", "CosMix4",
"DekkersAarts", "Easom", "EMichalewicz",
"Expo", "GoldPrice", "Griewank", "Gulf",
"Hartman3", "Hartman6", "Hosaki", "Kowalik",
"LM1", "LM2n10", "LM2n5", "McCormic",
"MeyerRoth", "MieleCantrell", "Modlangerman",
"ModRosenbrock", "MultiGauss", "Neumaier2",
"Neumaier3", "Paviani", "Periodic",
"PowellQ", "PriceTransistor", "Rastrigin",
"Rosenbrock", "Salomon", "Schaffer1",
"Schaffer2", "Schubert", "Schwefel",
"Shekel10", "Shekel5", "Shekel7",
"Shekelfox5", "Wood", "Zeldasine10",
"Zeldasine20")){
if (getProblemDimen(name) == 2)
cat(name, "\n")
}
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/methods.R')
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
lines(resultsInTime["1",,"bestSolution"], x = possibleTimes)
lines(resultsInTime["1",,"bestSolution"], x = possibleTimes)
lines(resultsInTime["2",,"bestSolution"], x = possibleTimes)
dev.off()
lines(resultsInTime["2",,"bestSolution"], x = possibleTimes)
plot.new()
lines(resultsInTime["2",,"bestSolution"], x = possibleTimes)
png(filename = "fiel.png")
lines(resultsInTime["2",,"bestSolution"], x = possibleTimes)
window()
?window
window(x=3)
lines(resultsInTime["2",,"bestSolution"], x = possibleTimes)
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/methods.R')
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/loadlibs.R')
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/methods.R')
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
lines(resultsInTime["1",,"bestSolution"], x=possibleTimes)
plot(runif(n = 10))
lines(resultsInTime["1",,"bestSolution"], x=possibleTimes)
resultsInTime["1",,"bestSolution"]
lines(resultsInTime["1",,"bestSolution"], x=possibleTimes)
plot()
plot(runif(n = 10))
plot(runif(min = min(resultsInTime["1",,"bestSolution"]), max=max(resultsInTime["1",,"bestSolution"]),n = 10))
min(resultsInTime["1",,"bestSolution"])
min(resultsInTime["1",,"bestSolution"], na.rm = TRUE)
resultsInTime["1",,"bestSolution"]
plot(runif(min = min(resultsInTime["1",,"bestSolution"], na.rm = TRUE), max=max(resultsInTime["1",,"bestSolution"],na.rm = TRUE),n = 10))
lines(resultsInTime["1",,"bestSolution"], x=possibleTimes)
plot(runif(min = min(resultsInTime["1",,"bestSolution"], na.rm = TRUE)-.05, max=max(resultsInTime["1",,"bestSolution"],na.rm = TRUE)+.05,n = 10))
lines(resultsInTime["1",,"bestSolution"], x=possibleTimes)
lines(resultsInTime["2",,"bestSolution"], x=possibleTimes)
resultsInTime["2",,"bestSolution"]
resultsInTime["5",,"bestSolution"]
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/methods.R')
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/methods.R')
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
resultsInTime["5",,"bestSolution"]
resultsInTime["2",,"bestSolution"]
resultsInTime["2",,"meanSolution"]
lines(resultsInTime["2",,"meanSolution"], x=possibleTimes)
plot(resultsInTime["2",,"meanSolution"], x=possibleTimes)
plot(resultsInTime["2",,"meanSolution"], x=possibleTimes, type="n")
plot(resultsInTime["2",,"meanSolution"], x=possibleTimes)
plot(resultsInTime["2",,"meanSolution"], x=possibleTimes, type="n")
lines(resultsInTime["2",,"meanSolution"], x=possibleTimes)
mean(c(NA,NA,NA,1.2,2.3))
mean(c(NA,NA,NA,1.2,2.3),na.rm = TRUE)
avrInTime<- array(dimnames = list(time=possibleTimes, values=collectedValues),
dim = c(length(possibleTimes), length(collectedValues))
)
for (timestamp in 1:length(possibleTimes)){
for (value in 1:length(collectedValues)){
avrInTime[timestamp,value] <- mean(resultsInTime[,timestamp,value], na.rm = TRUE)
}
}
avrInTime[,"bestSolution"]
avrInTime[,"meanSolution"]
plot(x=possibleTimes, y=avrInTime[,"bestSolution"])
plot(x=possibleTimes[:50], y=avrInTime[,"bestSolution"])
plot(x=possibleTimes[1:50], y=avrInTime[,"bestSolution"])
plot(x=possibleTimes[1:50], y=avrInTime[,"bestSolution"][1:50])
source('P:/Pwr_projects/PracaMagisterska/repo/R/workspace/ga_test.R')
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/ga_test.R')
testWithTimeMeasurment(fun=Schaffer1)
library("GA", lib.loc="~/R/win-library/3.3")
library("colorspace", lib.loc="~/R/win-library/3.3")
library("globalOptTests", lib.loc="~/R/win-library/3.3")
testWithTimeMeasurment(fun=Schaffer1)
x <- .Last.value
plot(x=seq(0,1.5,by=0.1), y=x[1:16,"bestSolution"])
testWithTimeMeasurment(fun=AluffiPentini, iters = 200) -> x
x
testWithTimeMeasurment(fun=AluffiPentini, iters = 200, popSize = 25) -> x
x
library("cec2013", lib.loc="~/R/win-library/3.3")
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/methods.R')
testWithTimeMeasurment(fun=cec2013_11, iters = 200, popSize = 25) -> x
x
testWithTimeMeasurment(fun=cec2013_11, iters = 200, popSize = 25) -> x2
x
plot(x=seq(0,3.2,by=0.1), y=x[1:33,"bestSolution"])
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/ga_test.R')
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/ga_test.R')
plot(x=seq(0,3.2,by=0.1), y=x[1:33,"bestSolution"])
testWithTimeMeasurment(fun=cec2013_11, iters = 200, popSize = 25) -> x2
x
x2
plot(x=seq(0,3.2,by=0.1), y=x[1:33,"bestSolution"])
plot(x=seq(0,3.2,by=0.1), y=x[1:33,"bestSolution"])
plot(x=seq(0,3.2,by=0.1), y=x[1:33,"meanSolution"])
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/ga-package/ga.R')
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/initGA.R')
remove.packages("GA", lib="~/R/win-library/3.3")
install.packages("GA")
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/loadlibs.R')
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/loadlibs.R')
source("./methods.R")
source("./ga_test.R")
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/loadlibs.R')
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/methods.R')
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/loadlibs.R')
for (name in c("Ackleys", "AluffiPentini", "BeckerLago",
"Bohachevsky1", "Bohachevsky2", "Branin",
"Camel3", "Camel6", "CosMix2", "CosMix4",
"DekkersAarts", "Easom", "EMichalewicz",
"Expo", "GoldPrice", "Griewank", "Gulf",
"Hartman3", "Hartman6", "Hosaki", "Kowalik",
"LM1", "LM2n10", "LM2n5", "McCormic",
"MeyerRoth", "MieleCantrell", "Modlangerman",
"ModRosenbrock", "MultiGauss", "Neumaier2",
"Neumaier3", "Paviani", "Periodic",
"PowellQ", "PriceTransistor", "Rastrigin",
"Rosenbrock", "Salomon", "Schaffer1",
"Schaffer2", "Schubert", "Schwefel",
"Shekel10", "Shekel5", "Shekel7",
"Shekelfox5", "Wood", "Zeldasine10",
"Zeldasine20")){
if (getProblemDimen(name) > 2)
cat(name, "\n")
}
for (name in c("Ackleys", "AluffiPentini", "BeckerLago",
"Bohachevsky1", "Bohachevsky2", "Branin",
"Camel3", "Camel6", "CosMix2", "CosMix4",
"DekkersAarts", "Easom", "EMichalewicz",
"Expo", "GoldPrice", "Griewank", "Gulf",
"Hartman3", "Hartman6", "Hosaki", "Kowalik",
"LM1", "LM2n10", "LM2n5", "McCormic",
"MeyerRoth", "MieleCantrell", "Modlangerman",
"ModRosenbrock", "MultiGauss", "Neumaier2",
"Neumaier3", "Paviani", "Periodic",
"PowellQ", "PriceTransistor", "Rastrigin",
"Rosenbrock", "Salomon", "Schaffer1",
"Schaffer2", "Schubert", "Schwefel",
"Shekel10", "Shekel5", "Shekel7",
"Shekelfox5", "Wood", "Zeldasine10",
"Zeldasine20")){
if (getProblemDimen(name) == 5)
cat(name, "\n")
}
debugSource('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/methods.R')
testWithTimeMeasurment(fun=Schaffer1)
debugSource('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/methods.R')
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/ga_test.R')
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/ga_test.R')
resultsInTime[1]
resultsInTime[1,]
resultsInTime[1,,]
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/ga_test.R')
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/testForOptimMethodsInTime.R')
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/globals.R')
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/testForOptimMethodsInTime.R')
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/testForOptimMethodsInTime.R')
testForOptimMethodsInTime()-> x
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/testForOptimMethodsInTime.R')
x
u <- na.exclude(x)
u
u[,,"meanSolution"]
u[,,"bestSolution"]
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/plotForMethods.R')
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/plotForMethods.R')
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/plotForMethods.R')
plotOptimMethodsComparation(results = x[1:5,,])
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/globals.R')
plotOptimMethodsComparation(results = x[1:5,,])
?range
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/plotForMethods.R')
plotOptimMethodsComparation(results = x[1:5,,])
?which.min
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/plotForMethods.R')
plotOptimMethodsComparation(results = x[1:5,,])
which.min(x[1:5,,])
min(x[1:5,,])
which(is.na(x[1:5,,]))
min(which(is.na(x[1:5,,])))
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/plotForMethods.R')
plotOptimMethodsComparation(results = x[1:5,,])
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/plotForMethods.R')
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/plotForMethods.R')
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/plotForMethods.R')
plotOptimMethodsComparation(results = x[1:5,,])
plotOptimMethodsComparation(results = x[1:5,,])
View(values)
debugSource('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/plotForMethods.R')
plotOptimMethodsComparation(results = x[1:5,,])
plotOptimMethodsComparation(results = x[1:5,,])
value
value
View(values)
dim(values)
debugSource('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/plotForMethods.R')
plotOptimMethodsComparation(results = x[1:5,,])
debugSource('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/plotForMethods.R')
plotOptimMethodsComparation(results = x[1:5,,])
debugSource('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/plotForMethods.R')
debugSource('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/plotForMethods.R')
plotOptimMethodsComparation(results = x[1:5,,])
values[,1:16]
debugSource('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/plotForMethods.R')
plotOptimMethodsComparation(results = x[1:5,,])
xRange
plotOptimMethodsComparation(results = x[1:5,,])
xRange
debugSource('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/plotForMethods.R')
debugSource('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/plotForMethods.R')
plotOptimMethodsComparation(results = x[1:5,,])
results[1,1:xRangeBorder,1]
results[1,1:xRangeBorder,1]
debugSource('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/plotForMethods.R')
getDefaultBounds("LM2n5")
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/testForOptimMethodsInTime.R')
testForOptimMethodsInTime(fun = LM2n5, lowerBounds = c(-10, -10, -10, -10, -10), upperBounds =  c(5, 5, 5, 5, 5))
.Last.value -> la
plotOptimMethodsComparation(results = la)
for (name in c("Ackleys", "AluffiPentini", "BeckerLago",
"Bohachevsky1", "Bohachevsky2", "Branin",
"Camel3", "Camel6", "CosMix2", "CosMix4",
"DekkersAarts", "Easom", "EMichalewicz",
"Expo", "GoldPrice", "Griewank", "Gulf",
"Hartman3", "Hartman6", "Hosaki", "Kowalik",
"LM1", "LM2n10", "LM2n5", "McCormic",
"MeyerRoth", "MieleCantrell", "Modlangerman",
"ModRosenbrock", "MultiGauss", "Neumaier2",
"Neumaier3", "Paviani", "Periodic",
"PowellQ", "PriceTransistor", "Rastrigin",
"Rosenbrock", "Salomon", "Schaffer1",
"Schaffer2", "Schubert", "Schwefel",
"Shekel10", "Shekel5", "Shekel7",
"Shekelfox5", "Wood", "Zeldasine10",
"Zeldasine20")){
if (getProblemDimen(name) > 2)
cat(name, getProblemDimen(name)"\n")
}
for (name in c("Ackleys", "AluffiPentini", "BeckerLago",
"Bohachevsky1", "Bohachevsky2", "Branin",
"Camel3", "Camel6", "CosMix2", "CosMix4",
"DekkersAarts", "Easom", "EMichalewicz",
"Expo", "GoldPrice", "Griewank", "Gulf",
"Hartman3", "Hartman6", "Hosaki", "Kowalik",
"LM1", "LM2n10", "LM2n5", "McCormic",
"MeyerRoth", "MieleCantrell", "Modlangerman",
"ModRosenbrock", "MultiGauss", "Neumaier2",
"Neumaier3", "Paviani", "Periodic",
"PowellQ", "PriceTransistor", "Rastrigin",
"Rosenbrock", "Salomon", "Schaffer1",
"Schaffer2", "Schubert", "Schwefel",
"Shekel10", "Shekel5", "Shekel7",
"Shekelfox5", "Wood", "Zeldasine10",
"Zeldasine20")){
if (getProblemDimen(name) > 2)
cat(name, getProblemDimen(name),"\n")
}
LM2n5 <- function(x){
return (-goTest(x, "LM2n5"))
}
Paviani <- function(x){
return (-goTest(x, "Paviani"))
}
getDefaultBounds("Paviani")
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/testForOptimMethodsInTime.R')
testForOptimMethodsInTime()
testForOptimMethodsInTimeAllFunctions()
testForOptimMethodsInTimeAllFunctions()
fun
fun(c(0,0))
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/methods.R')
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/plots.R')
iksy <- seq(-5,5,by=.1)
igreki <- seq(-5,5,by=.1)
val <- myouter(f=McCormic, x=iksy, y = igreki)
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/loadlibs.R')
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/methods.R')
val <- myouter(f=McCormic, x=iksy, y = igreki)
myPlot3D(x= iksy, y = igreki, values = val)
iksy <- seq(-10,0,by=.1)
igreki <- seq(-10,0,by=.1)
val <- myouter(f=McCormic, x=iksy, y = igreki)
myPlot3D(x= iksy, y = igreki, values = val)
igreki <- seq(-25,25,by=.1)
iksy <- seq(-25,25,by=.1)
val <- myouter(f=McCormic, x=iksy, y = igreki)
myPlot3D(x= iksy, y = igreki, values = val)
ModRosenbrock <- function(x, y) {
if (missing(y)){
return (-goTest(x, "ModRosenbrock"))
}
else{
return (-goTest(c(x,y), "ModRosenbrock"))
}
}
val <- myouter(f=ModRosenbrock, x=iksy, y = igreki)
myPlot3D(x= iksy, y = igreki, values = val)
GoldPrice <- function(x, y) {
if (missing(y)){
return (-goTest(x, "GoldPrice"))
}
else{
return (-goTest(c(x,y), "GoldPrice"))
}
}
val <- myouter(f=GoldPrice, x=iksy, y = igreki)
myPlot3D(x= iksy, y = igreki, values = val)
iksy <- seq(-50,50,by=.1)
igreki <- seq(-50,50,by=.1)
val <- myouter(f=GoldPrice, x=iksy, y = igreki)
cec2013_14 <- function(x, y) {
if (missing(y)){
return (cec2013(14,x))
}
else{
return (cec2013(14,c(x,y)))
igreki <- seq(-100,100,by=1)
igreki <- seq(-100,100,by=1)
iksy <- seq(-100,100,by=1)
val <- myouter(f=cec2013_14, x=iksy, y = igreki)
cec2013_14 <- function(x, y) {
if (missing(y)){
return (cec2013(14,x))
}
else{
return (cec2013(14,c(x,y)))
}
}
val <- myouter(f=cec2013_14, x=iksy, y = igreki)
myPlot3D(x= iksy, y = igreki, values = val)
cec2013_23 <- function(x, y) {
if (missing(y)){
return (cec2013(23,x))
}
else{
return (cec2013(23,c(x,y)))
}
}
val <- myouter(f=cec2013_23, x=iksy, y = igreki)
myPlot3D(x= iksy, y = igreki, values = val)
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/methods.R')
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/loadlibs.R')
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/loadlibs.R')
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/javaEntryPoints/java_plotFunction3D.R')
java_plotFunction3D(fun=Schaffer1, destinationPath=D:/plot.png, xRange=seq(-5.0,5.0, by=0.1), yRange=seq(-5.0,5.0, by=0.1))
java_plotFunction3D(fun=Schaffer1, destinationPath="D:/plot.png", xRange=seq(-5.0, 5.0, by=0.1), yRange=seq(-5.0, 5.0, by=0.1))
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/methods.R')
source('P:/Pwr_projects/PracaMagisterska/PracaMagisterska/repo/R/workspace/methods.R')
java_plotFunction3D(fun=Schaffer1, destinationPath="C:/Users/Piotrek/AppData/Local/Temp/Schaffer15256393158386846105171488987298378.png", xRange=seq(-5.0, 5.0, by=0.15), yRange=seq(-5.0, 5.0, by=0.2), height=600, width=800)
source('P:/PWr_projects/PracaMagisterska_2/PracaMagisterska/repo/R/workspace/javaEntryPoints/java_plotFunction3D.R')
java_plotFunction3D(fun=Schaffer1, destinationPath="C:/Users/Piotrek/AppData/Local/Temp/Schaffer15256393158386846105171488987298378.png", xRange=seq(-5.0, 5.0, by=0.15), yRange=seq(-5.0, 5.0, by=0.2), height=600, width=800)
source('P:/PWr_projects/PracaMagisterska_2/PracaMagisterska/repo/R/workspace/javaEntryPoints/init.R')
setwd("P:/PWr_projects/PracaMagisterska_2/PracaMagisterska/repo/R/workspace/javaEntryPoints")
source('P:/PWr_projects/PracaMagisterska_2/PracaMagisterska/repo/R/workspace/javaEntryPoints/init.R')
java_plotFunction3D(fun=Schaffer1, destinationPath="C:/Users/Piotrek/AppData/Local/Temp/Schaffer15256393158386846105171488987298378.png", xRange=seq(-5.0, 5.0, by=0.15), yRange=seq(-5.0, 5.0, by=0.2), height=600, width=800)
java_plotFunction3D(fun=Schaffer1, destinationPath="C:/Users/Piotrek/AppData/Local/Temp/Schaffer15256393158386846105171488987298378.png", xRange=seq(-5.0, 5.0, by=0.15), yRange=seq(-5.0, 5.0, by=0.2), height=600, width=800)
